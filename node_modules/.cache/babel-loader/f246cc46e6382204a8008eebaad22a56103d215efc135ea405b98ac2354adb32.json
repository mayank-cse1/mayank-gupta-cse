{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mayan/mayank-gupta-cse/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"C:/Users/mayan/mayank-gupta-cse/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/mayan/mayank-gupta-cse/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/mayan/mayank-gupta-cse/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/Users/mayan/mayank-gupta-cse/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject10,_templateObject11;import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API_KEY=\"AIzaSyA19uCjIjOX3Wsjlan6ZT-R9cBi05esgjw\";// Replace with your actual API key\nvar GEMINI_API_URL=\"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=\".concat(API_KEY);var SYSTEM_PROMPT=\"\\nYou are an AI assistant that provides responses only about Mayank Gupta. \\n\\nIf a user asks about personal details, non-career topics, or unrelated subjects, politely decline by saying: \\n\\\"I'm here to answer questions about Mayank Gupta's education, experience, and career aspirations. Let me know how I can help!\\\"\\n\\nHere\\u2019s Mayank Gupta\\u2019s professional background:\\n\\n**Education:**  \\n- B.Tech in Computer Science and Engineering (2020-2024) from Vellore Institute of Technology, Chennai.  \\n- Higher Secondary (92.60%) from Ahlcon Public School, New Delhi (2018-2020).  \\n\\n**Experience:**  \\n- **Software Development Engineer (SDE) at John Deere** (June 2024 \\u2013 Present)  \\n  - Developed \\\"DeereVision AI Workspace,\\\" integrating LLaMA 3.2 and Neo4j & Chroma DB.  \\n  - Built modular Python solutions with LangChain, Terraform, Docker, and GitHub Actions on AWS.  \\n\\n- **SDE Intern at Swiggy** (Sept 2023 \\u2013 June 2024)  \\n  - Developed 7 full-fledged payment dashboards using Elasticsearch & Retool.  \\n\\n- **SDE Intern at Dewiride Technologies** (July 2022 \\u2013 Dec 2022)  \\n  - Worked on 15+ client-specific projects using Python, C#, and Microsoft Bot Framework.  \\n\\n- **SDE Intern at LG Electronics** (May 2022 \\u2013 July 2022)  \\n  - Built a Lunch Booking Web App used by 1000+ employees with C# and ASP.NET.  \\n\\n**Projects:**  \\n- **DEV \\u2013 Virtual Banking Assistant** (Finalist, Bank of Baroda Hackathon)  \\n- **Face Track AI** (Finalist, Tamil Nadu Police Hackathon)  \\n- **Hunger Free Society** (2nd Prize, IEEE AISYWAL Competition)  \\n- **Go-To-Market Merchandiser Bot** (Automated Merchandiser Reporting)  \\n\\n**Skills:**  \\n- **Programming:** Python, C++, Java, C#  \\n- **Frameworks:** Ollama, LangChain, FastAPI, Flask, ASP.NET, Django  \\n- **Databases:** MySQL, Cosmos DB, Neo4j, ChromaDB, FAISS  \\n- **Cloud:** AWS, GCP, Azure  \\n\\nWhen answering questions, stay concise and professional. If the question is unclear, ask for clarification. If the topic is outside Mayank Gupta\\u2019s career scope, politely decline to answer.\\n\";var TEMPLATE_QUESTION_PROMPT=\"\\nYou are Mayank Gupta's virtual assistant. Your task is to generate a relevant follow-up questions based on the given user question and the bot's response.  \\n\\n### Instructions:  \\n- The questions should be contextually relevant to the conversation.  \\n- Ensure they are well-formed, meaningful, and logically connected to the topic.  \\n- If the input is unclear or unrelated to Mayank Gupta's career, return the default list:  [\\\"Hi! How can you help me?\\\", \\\"What knowledge do you have about Mayank?\\\"].  \\n\\n\";var defaultTemplateQuestions=[\"Hi! How can you help me\",\"What knowledge do you have about Mayank\"];var templateQuestions=[\"Hi! How can you help me\",\"What knowledge do you have about Mayank\"];var ChatContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px;\\n  z-index: 1000;\\n\"])));var ChatButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  padding: 12px;\\n  font-size: 20px;\\n  border-radius: 50%;\\n  cursor: pointer;\\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\\n\"])));var ChatWindow=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 300px;\\n  height: 450px;\\n  background: white;\\n  border-radius: 10px;\\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\\n  display: \",\";\\n  flex-direction: column;\\n  position: fixed;\\n  bottom: 80px;\\n  right: 20px;\\n\"])),function(props){return props.visible?\"flex\":\"none\";});var ChatHeader=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  padding: 10px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n\"])));var CloseButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  color: white;\\n  font-size: 18px;\\n  cursor: pointer;\\n\"])));var ChatBody=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 10px;\\n  overflow-y: auto;\\n  font-size: 14px;\\n  background: #f9f9f9;\\n\"])));var TemplateButtons=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 5px;\\n  padding: 5px;\\n  background: #f1f1f1;\\n\"])));var TemplateButton=styled.button(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  padding: 5px;\\n  font-size: 12px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n\"])));var ChatInputContainer=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  border-top: 1px solid #ddd;\\n  padding: 5px;\\n  background: #fff;\\n\"])));var ChatInput=styled.input(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 8px;\\n  border: none;\\n  outline: none;\\n\"])));var SendButton=styled.button(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  padding: 8px;\\n  cursor: pointer;\\n\"])));var Chatbot=function Chatbot(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(defaultTemplateQuestions),_useState6=_slicedToArray(_useState5,2),templateQuestions=_useState6[0],setTemplateQuestions=_useState6[1];useEffect(function(){var storedMessages=JSON.parse(localStorage.getItem(\"chatHistory\"))||[];setMessages(storedMessages);},[]);useEffect(function(){localStorage.setItem(\"chatHistory\",JSON.stringify(messages));},[messages]);var isValidPythonString=function isValidPythonString(input){try{JSON.parse(JSON.stringify(input));return true;}catch(error){return false;}};var handleSendMessage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(input){var userMessage,botResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(input.trim()){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userMessage={text:input,sender:\"user\"};setMessages([].concat(_toConsumableArray(messages),[userMessage]));_context.next=6;return getBotResponse(input);case 6:botResponse=_context.sent;if(!botResponse.includes(\"I'm not sure\",\"help\")){fetchTemplateQuestions(input,botResponse);}else{setTemplateQuestions(defaultTemplateQuestions);}setMessages(function(prev){return[].concat(_toConsumableArray(prev),[{text:botResponse,sender:\"bot\"}]);});case 9:case\"end\":return _context.stop();}},_callee);}));return function handleSendMessage(_x){return _ref.apply(this,arguments);};}();var handleTemplateClick=function handleTemplateClick(question){handleSendMessage(question);};var fetchTemplateQuestions=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input,botResponse){var _data$candidates,_data$candidates$,_data$candidates$$con,_data$candidates$$con2,response,data,questions;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(isValidPythonString(input)){_context2.next=3;break;}setTemplateQuestions(defaultTemplateQuestions);return _context2.abrupt(\"return\");case 3:_context2.prev=3;_context2.next=6;return fetch(GEMINI_API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({contents:[{parts:[{text:\"\".concat(TEMPLATE_QUESTION_PROMPT,\" \\n Generate 1 relevant questions based on: \").concat(input,\" and bot response :\").concat(botResponse)}]}]})});case 6:response=_context2.sent;_context2.next=9;return response.json();case 9:data=_context2.sent;questions=(data===null||data===void 0?void 0:(_data$candidates=data.candidates)===null||_data$candidates===void 0?void 0:(_data$candidates$=_data$candidates[0])===null||_data$candidates$===void 0?void 0:(_data$candidates$$con=_data$candidates$.content)===null||_data$candidates$$con===void 0?void 0:(_data$candidates$$con2=_data$candidates$$con.parts)===null||_data$candidates$$con2===void 0?void 0:_data$candidates$$con2.map(function(part){return part.text;}))||defaultTemplateQuestions;setTemplateQuestions(questions);_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](3);console.error(\"Error fetching template questions:\",_context2.t0);setTemplateQuestions(defaultTemplateQuestions);case 18:case\"end\":return _context2.stop();}},_callee2,null,[[3,14]]);}));return function fetchTemplateQuestions(_x2,_x3){return _ref2.apply(this,arguments);};}();var getBotResponse=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(input){var _data$candidates2,_data$candidates2$,_data$candidates2$$co,_data$candidates2$$co2,_data$candidates2$$co3,response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(GEMINI_API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({contents:[{parts:[{text:\"\".concat(SYSTEM_PROMPT,\"\\nUser: \").concat(input,\"\\nAI:\")}]}]})});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:data=_context3.sent;return _context3.abrupt(\"return\",(data===null||data===void 0?void 0:(_data$candidates2=data.candidates)===null||_data$candidates2===void 0?void 0:(_data$candidates2$=_data$candidates2[0])===null||_data$candidates2$===void 0?void 0:(_data$candidates2$$co=_data$candidates2$.content)===null||_data$candidates2$$co===void 0?void 0:(_data$candidates2$$co2=_data$candidates2$$co.parts)===null||_data$candidates2$$co2===void 0?void 0:(_data$candidates2$$co3=_data$candidates2$$co2[0])===null||_data$candidates2$$co3===void 0?void 0:_data$candidates2$$co3.text)||\"I'm not sure, but I'm learning!\");case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.error(\"Error fetching response:\",_context3.t0);return _context3.abrupt(\"return\",\"Oops! Something went wrong.\");case 14:case\"end\":return _context3.stop();}},_callee3,null,[[0,10]]);}));return function getBotResponse(_x4){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(ChatContainer,{children:[/*#__PURE__*/_jsx(ChatButton,{onClick:function onClick(){return setVisible(!visible);},children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsxs(ChatWindow,{visible:visible,children:[/*#__PURE__*/_jsxs(ChatHeader,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Chatbot\"}),/*#__PURE__*/_jsx(CloseButton,{onClick:function onClick(){return setVisible(false);},children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(ChatBody,{children:messages.map(function(msg,index){return/*#__PURE__*/_jsx(\"div\",{style:{textAlign:msg.sender===\"user\"?\"right\":\"left\"},children:/*#__PURE__*/_jsx(\"p\",{style:{margin:\"5px 0\",padding:\"5px\",background:msg.sender===\"user\"?\"#007bff\":\"#ddd\",color:msg.sender===\"user\"?\"white\":\"black\",borderRadius:\"5px\",display:\"inline-block\"},children:msg.text})},index);})}),/*#__PURE__*/_jsx(TemplateButtons,{children:templateQuestions.map(function(question,index){return/*#__PURE__*/_jsx(TemplateButton,{onClick:function onClick(){return handleTemplateClick(question);},children:question},index);})}),/*#__PURE__*/_jsxs(ChatInputContainer,{children:[/*#__PURE__*/_jsx(ChatInput,{id:\"chat-input\",type:\"text\",placeholder:\"Type a message...\",onKeyPress:function onKeyPress(e){return e.key===\"Enter\"&&handleSendMessage(e.target.value);}}),/*#__PURE__*/_jsx(SendButton,{onClick:function onClick(){return handleSendMessage(document.getElementById(\"chat-input\").value);},children:\"\\u27A4\"})]})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","styled","jsx","_jsx","jsxs","_jsxs","API_KEY","GEMINI_API_URL","concat","SYSTEM_PROMPT","TEMPLATE_QUESTION_PROMPT","defaultTemplateQuestions","templateQuestions","ChatContainer","div","_templateObject","_taggedTemplateLiteral","ChatButton","button","_templateObject2","ChatWindow","_templateObject3","props","visible","ChatHeader","_templateObject4","CloseButton","_templateObject5","ChatBody","_templateObject6","TemplateButtons","_templateObject7","TemplateButton","_templateObject8","ChatInputContainer","_templateObject9","ChatInput","input","_templateObject10","SendButton","_templateObject11","Chatbot","_useState","_useState2","_slicedToArray","setVisible","_useState3","_useState4","messages","setMessages","_useState5","_useState6","setTemplateQuestions","storedMessages","JSON","parse","localStorage","getItem","setItem","stringify","isValidPythonString","error","handleSendMessage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userMessage","botResponse","wrap","_callee$","_context","prev","next","trim","abrupt","text","sender","_toConsumableArray","getBotResponse","sent","includes","fetchTemplateQuestions","stop","_x","apply","arguments","handleTemplateClick","question","_ref2","_callee2","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","response","data","questions","_callee2$","_context2","fetch","method","headers","body","contents","parts","json","candidates","content","map","part","t0","console","_x2","_x3","_ref3","_callee3","_data$candidates2","_data$candidates2$","_data$candidates2$$co","_data$candidates2$$co2","_data$candidates2$$co3","_callee3$","_context3","_x4","children","onClick","msg","index","style","textAlign","margin","padding","background","color","borderRadius","display","id","type","placeholder","onKeyPress","e","key","target","value","document","getElementById"],"sources":["C:/Users/mayan/mayank-gupta-cse/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst API_KEY = \"AIzaSyA19uCjIjOX3Wsjlan6ZT-R9cBi05esgjw\"; // Replace with your actual API key\r\nconst GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${API_KEY}`;\r\nconst SYSTEM_PROMPT = `\r\nYou are an AI assistant that provides responses only about Mayank Gupta. \r\n\r\nIf a user asks about personal details, non-career topics, or unrelated subjects, politely decline by saying: \r\n\"I'm here to answer questions about Mayank Gupta's education, experience, and career aspirations. Let me know how I can help!\"\r\n\r\nHere’s Mayank Gupta’s professional background:\r\n\r\n**Education:**  \r\n- B.Tech in Computer Science and Engineering (2020-2024) from Vellore Institute of Technology, Chennai.  \r\n- Higher Secondary (92.60%) from Ahlcon Public School, New Delhi (2018-2020).  \r\n\r\n**Experience:**  \r\n- **Software Development Engineer (SDE) at John Deere** (June 2024 – Present)  \r\n  - Developed \"DeereVision AI Workspace,\" integrating LLaMA 3.2 and Neo4j & Chroma DB.  \r\n  - Built modular Python solutions with LangChain, Terraform, Docker, and GitHub Actions on AWS.  \r\n\r\n- **SDE Intern at Swiggy** (Sept 2023 – June 2024)  \r\n  - Developed 7 full-fledged payment dashboards using Elasticsearch & Retool.  \r\n\r\n- **SDE Intern at Dewiride Technologies** (July 2022 – Dec 2022)  \r\n  - Worked on 15+ client-specific projects using Python, C#, and Microsoft Bot Framework.  \r\n\r\n- **SDE Intern at LG Electronics** (May 2022 – July 2022)  \r\n  - Built a Lunch Booking Web App used by 1000+ employees with C# and ASP.NET.  \r\n\r\n**Projects:**  \r\n- **DEV – Virtual Banking Assistant** (Finalist, Bank of Baroda Hackathon)  \r\n- **Face Track AI** (Finalist, Tamil Nadu Police Hackathon)  \r\n- **Hunger Free Society** (2nd Prize, IEEE AISYWAL Competition)  \r\n- **Go-To-Market Merchandiser Bot** (Automated Merchandiser Reporting)  \r\n\r\n**Skills:**  \r\n- **Programming:** Python, C++, Java, C#  \r\n- **Frameworks:** Ollama, LangChain, FastAPI, Flask, ASP.NET, Django  \r\n- **Databases:** MySQL, Cosmos DB, Neo4j, ChromaDB, FAISS  \r\n- **Cloud:** AWS, GCP, Azure  \r\n\r\nWhen answering questions, stay concise and professional. If the question is unclear, ask for clarification. If the topic is outside Mayank Gupta’s career scope, politely decline to answer.\r\n`;\r\nconst TEMPLATE_QUESTION_PROMPT = `\r\nYou are Mayank Gupta's virtual assistant. Your task is to generate a relevant follow-up questions based on the given user question and the bot's response.  \r\n\r\n### Instructions:  \r\n- The questions should be contextually relevant to the conversation.  \r\n- Ensure they are well-formed, meaningful, and logically connected to the topic.  \r\n- If the input is unclear or unrelated to Mayank Gupta's career, return the default list:  [\"Hi! How can you help me?\", \"What knowledge do you have about Mayank?\"].  \r\n\r\n`;\r\nconst defaultTemplateQuestions = [\r\n  \"Hi! How can you help me\",\r\n  \"What knowledge do you have about Mayank\"\r\n];\r\n\r\nconst templateQuestions = [\r\n  \"Hi! How can you help me\",\r\n  \"What knowledge do you have about Mayank\"\r\n];\r\n\r\nconst ChatContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ChatButton = styled.button`\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px;\r\n  font-size: 20px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst ChatWindow = styled.div`\r\n  width: 300px;\r\n  height: 450px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: ${(props) => (props.visible ? \"flex\" : \"none\")};\r\n  flex-direction: column;\r\n  position: fixed;\r\n  bottom: 80px;\r\n  right: 20px;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  background: #007bff;\r\n  color: white;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChatBody = styled.div`\r\n  flex: 1;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  font-size: 14px;\r\n  background: #f9f9f9;\r\n`;\r\n\r\nconst TemplateButtons = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n  padding: 5px;\r\n  background: #f1f1f1;\r\n`;\r\n\r\nconst TemplateButton = styled.button`\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px;\r\n  font-size: 12px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  display: flex;\r\n  border-top: 1px solid #ddd;\r\n  padding: 5px;\r\n  background: #fff;\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Chatbot = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [templateQuestions, setTemplateQuestions] = useState(defaultTemplateQuestions);\r\n\r\n  useEffect(() => {\r\n    const storedMessages = JSON.parse(localStorage.getItem(\"chatHistory\")) || [];\r\n    setMessages(storedMessages);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\r\n  }, [messages]);\r\n  const isValidPythonString = (input) => {\r\n    try {\r\n      JSON.parse(JSON.stringify(input));\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n  const handleSendMessage = async (input) => {\r\n    if (!input.trim()) return;\r\n    \r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setMessages([...messages, userMessage]);\r\n    \r\n    const botResponse = await getBotResponse(input);\r\n    if (!botResponse.includes(\"I'm not sure\", \"help\")) {\r\n      fetchTemplateQuestions(input, botResponse);\r\n  } else {\r\n      setTemplateQuestions(defaultTemplateQuestions);\r\n  }\r\n    setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\r\n  };\r\n\r\n  const handleTemplateClick = (question) => {\r\n    handleSendMessage(question);\r\n  };\r\n  const fetchTemplateQuestions = async (input,botResponse) => {\r\n    if (!isValidPythonString(input)) {\r\n      setTemplateQuestions(defaultTemplateQuestions);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(GEMINI_API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [{ parts: [{ text: `${TEMPLATE_QUESTION_PROMPT} \\n Generate 1 relevant questions based on: ${input} and bot response :${botResponse}` }] }],\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      const questions = data?.candidates?.[0]?.content?.parts?.map(part => part.text) || defaultTemplateQuestions;\r\n      setTemplateQuestions(questions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching template questions:\", error);\r\n      setTemplateQuestions(defaultTemplateQuestions);\r\n    }\r\n  };\r\n  const getBotResponse = async (input) => {\r\n    try {\r\n      const response = await fetch(GEMINI_API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [{ parts: [{ text: `${SYSTEM_PROMPT}\\nUser: ${input}\\nAI:` }] }],\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      return data?.candidates?.[0]?.content?.parts?.[0]?.text || \"I'm not sure, but I'm learning!\";\r\n    } catch (error) {\r\n      console.error(\"Error fetching response:\", error);\r\n      return \"Oops! Something went wrong.\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatButton onClick={() => setVisible(!visible)}>💬</ChatButton>\r\n      <ChatWindow visible={visible}>\r\n        <ChatHeader>\r\n          <span>Chatbot</span>\r\n          <CloseButton onClick={() => setVisible(false)}>&times;</CloseButton>\r\n        </ChatHeader>\r\n        <ChatBody>\r\n          {messages.map((msg, index) => (\r\n            <div key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\" }}>\r\n              <p\r\n                style={{\r\n                  margin: \"5px 0\",\r\n                  padding: \"5px\",\r\n                  background: msg.sender === \"user\" ? \"#007bff\" : \"#ddd\",\r\n                  color: msg.sender === \"user\" ? \"white\" : \"black\",\r\n                  borderRadius: \"5px\",\r\n                  display: \"inline-block\",\r\n                }}\r\n              >\r\n                {msg.text}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </ChatBody>\r\n        <TemplateButtons>\r\n          {templateQuestions.map((question, index) => (\r\n            <TemplateButton key={index} onClick={() => handleTemplateClick(question)}>\r\n              {question}\r\n            </TemplateButton>\r\n          ))}\r\n        </TemplateButtons>\r\n        <ChatInputContainer>\r\n          <ChatInput id=\"chat-input\" type=\"text\" placeholder=\"Type a message...\" onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage(e.target.value)} />\r\n          <SendButton onClick={() => handleSendMessage(document.getElementById(\"chat-input\").value)}>➤</SendButton>\r\n        </ChatInputContainer>\r\n      </ChatWindow>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}