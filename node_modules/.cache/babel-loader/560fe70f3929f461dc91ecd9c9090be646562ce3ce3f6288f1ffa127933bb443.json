{"ast":null,"code":"import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover';\nimport Tooltip from './Tooltip';\n\n// This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover or tooltip.\nexport default function useOverlayOffset(customOffset) {\n  var overlayRef = useRef(null);\n  var popoverClass = useBootstrapPrefix(undefined, 'popover');\n  var tooltipClass = useBootstrapPrefix(undefined, 'tooltip');\n  var offset = useMemo(function () {\n    return {\n      name: 'offset',\n      options: {\n        offset: function offset() {\n          if (customOffset) {\n            return customOffset;\n          }\n          if (overlayRef.current) {\n            if (hasClass(overlayRef.current, popoverClass)) {\n              return Popover.POPPER_OFFSET;\n            }\n            if (hasClass(overlayRef.current, tooltipClass)) {\n              return Tooltip.TOOLTIP_OFFSET;\n            }\n          }\n          return [0, 0];\n        }\n      }\n    };\n  }, [customOffset, popoverClass, tooltipClass]);\n  return [overlayRef, [offset]];\n}","map":{"version":3,"names":["useMemo","useRef","hasClass","useBootstrapPrefix","Popover","Tooltip","useOverlayOffset","customOffset","overlayRef","popoverClass","undefined","tooltipClass","offset","name","options","current","POPPER_OFFSET","TOOLTIP_OFFSET"],"sources":["C:/Users/mayan/source/repos/mayankcse.github.io/node_modules/react-bootstrap/esm/useOverlayOffset.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\r\nimport hasClass from 'dom-helpers/hasClass';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport Popover from './Popover';\r\nimport Tooltip from './Tooltip';\r\n\r\n// This is meant for internal use.\r\n// This applies a custom offset to the overlay if it's a popover or tooltip.\r\nexport default function useOverlayOffset(customOffset) {\r\n  const overlayRef = useRef(null);\r\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\r\n  const tooltipClass = useBootstrapPrefix(undefined, 'tooltip');\r\n  const offset = useMemo(() => ({\r\n    name: 'offset',\r\n    options: {\r\n      offset: () => {\r\n        if (customOffset) {\r\n          return customOffset;\r\n        }\r\n        if (overlayRef.current) {\r\n          if (hasClass(overlayRef.current, popoverClass)) {\r\n            return Popover.POPPER_OFFSET;\r\n          }\r\n          if (hasClass(overlayRef.current, tooltipClass)) {\r\n            return Tooltip.TOOLTIP_OFFSET;\r\n          }\r\n        }\r\n        return [0, 0];\r\n      }\r\n    }\r\n  }), [customOffset, popoverClass, tooltipClass]);\r\n  return [overlayRef, [offset]];\r\n}"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AACA;AACA,eAAe,SAASC,gBAAgBA,CAACC,YAAY,EAAE;EACrD,IAAMC,UAAU,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC/B,IAAMQ,YAAY,GAAGN,kBAAkB,CAACO,SAAS,EAAE,SAAS,CAAC;EAC7D,IAAMC,YAAY,GAAGR,kBAAkB,CAACO,SAAS,EAAE,SAAS,CAAC;EAC7D,IAAME,MAAM,GAAGZ,OAAO,CAAC;IAAA,OAAO;MAC5Ba,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;QACPF,MAAM,EAAE,SAAAA,OAAA,EAAM;UACZ,IAAIL,YAAY,EAAE;YAChB,OAAOA,YAAY;UACrB;UACA,IAAIC,UAAU,CAACO,OAAO,EAAE;YACtB,IAAIb,QAAQ,CAACM,UAAU,CAACO,OAAO,EAAEN,YAAY,CAAC,EAAE;cAC9C,OAAOL,OAAO,CAACY,aAAa;YAC9B;YACA,IAAId,QAAQ,CAACM,UAAU,CAACO,OAAO,EAAEJ,YAAY,CAAC,EAAE;cAC9C,OAAON,OAAO,CAACY,cAAc;YAC/B;UACF;UACA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QACf;MACF;IACF,CAAC;EAAA,CAAC,EAAE,CAACV,YAAY,EAAEE,YAAY,EAAEE,YAAY,CAAC,CAAC;EAC/C,OAAO,CAACH,UAAU,EAAE,CAACI,MAAM,CAAC,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}