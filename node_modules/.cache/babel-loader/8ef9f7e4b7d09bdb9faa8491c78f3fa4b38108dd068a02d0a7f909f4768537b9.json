{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayan\\\\OneDrive\\\\Desktop\\\\mayank-cse.github.io-main\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n`;\n_c = ChatContainer;\nconst ChatButton = styled.button`\n  background: #007bff;\n  color: white;\n  border: none;\n  padding: 12px;\n  font-size: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\n`;\n_c2 = ChatButton;\nconst ChatWindow = styled.div`\n  width: 300px;\n  height: 400px;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\n  display: ${props => props.visible ? \"flex\" : \"none\"};\n  flex-direction: column;\n  overflow: hidden;\n  position: fixed;\n  bottom: 80px;\n  right: 20px;\n`;\n_c3 = ChatWindow;\nconst ChatHeader = styled.div`\n  background: #007bff;\n  color: white;\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c4 = ChatHeader;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n`;\n_c5 = CloseButton;\nconst ChatBody = styled.div`\n  flex: 1;\n  padding: 10px;\n  overflow-y: auto;\n  font-size: 14px;\n  background: #f9f9f9;\n`;\n_c6 = ChatBody;\nconst ChatInputContainer = styled.div`\n  display: flex;\n  border-top: 1px solid #ddd;\n  padding: 5px;\n  background: #fff;\n`;\n_c7 = ChatInputContainer;\nconst ChatInput = styled.input`\n  flex: 1;\n  padding: 8px;\n  border: none;\n  outline: none;\n`;\n_c8 = ChatInput;\nconst SendButton = styled.button`\n  background: #007bff;\n  color: white;\n  border: none;\n  padding: 8px;\n  cursor: pointer;\n`;\n_c9 = SendButton;\nconst Chatbot = () => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const storedMessages = JSON.parse(localStorage.getItem(\"chatHistory\")) || [];\n    setMessages(storedMessages);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\n  }, [messages]);\n  const handleSendMessage = event => {\n    if (event.key === \"Enter\" || event.type === \"click\") {\n      const input = event.target.value || document.getElementById(\"chat-input\").value;\n      if (!input.trim()) return;\n      const userMessage = {\n        text: input,\n        sender: \"user\"\n      };\n      const botResponse = {\n        text: getBotResponse(input),\n        sender: \"bot\"\n      };\n      setMessages([...messages, userMessage, botResponse]);\n      document.getElementById(\"chat-input\").value = \"\";\n    }\n  };\n  const getBotResponse = input => {\n    const responses = {\n      hello: \"Hi there! How can I help you?\",\n      \"how are you\": \"I'm just a bot, but I'm doing great!\",\n      bye: \"Goodbye! Have a great day!\"\n    };\n    return responses[input.toLowerCase()] || \"I'm not sure, but I'm learning!\";\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatButton, {\n      onClick: () => setVisible(!visible),\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      visible: visible,\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: () => setVisible(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBody, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.sender === \"user\" ? \"right\" : \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: \"5px 0\",\n              padding: \"5px\",\n              background: msg.sender === \"user\" ? \"#007bff\" : \"#ddd\",\n              color: msg.sender === \"user\" ? \"white\" : \"black\",\n              borderRadius: \"5px\",\n              display: \"inline-block\"\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ChatInput, {\n          id: \"chat-input\",\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          onKeyPress: handleSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n          onClick: handleSendMessage,\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"4qNg1R3gVeQxofx/EI2gXhnr698=\");\n_c10 = Chatbot;\nexport default Chatbot;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatButton\");\n$RefreshReg$(_c3, \"ChatWindow\");\n$RefreshReg$(_c4, \"ChatHeader\");\n$RefreshReg$(_c5, \"CloseButton\");\n$RefreshReg$(_c6, \"ChatBody\");\n$RefreshReg$(_c7, \"ChatInputContainer\");\n$RefreshReg$(_c8, \"ChatInput\");\n$RefreshReg$(_c9, \"SendButton\");\n$RefreshReg$(_c10, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","ChatContainer","div","_c","ChatButton","button","_c2","ChatWindow","props","visible","_c3","ChatHeader","_c4","CloseButton","_c5","ChatBody","_c6","ChatInputContainer","_c7","ChatInput","input","_c8","SendButton","_c9","Chatbot","_s","setVisible","messages","setMessages","storedMessages","JSON","parse","localStorage","getItem","setItem","stringify","handleSendMessage","event","key","type","target","value","document","getElementById","trim","userMessage","text","sender","botResponse","getBotResponse","responses","hello","bye","toLowerCase","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","style","textAlign","margin","padding","background","color","borderRadius","display","id","placeholder","onKeyPress","_c10","$RefreshReg$"],"sources":["C:/Users/mayan/OneDrive/Desktop/mayank-cse.github.io-main/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ChatContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ChatButton = styled.button`\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px;\r\n  font-size: 20px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst ChatWindow = styled.div`\r\n  width: 300px;\r\n  height: 400px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: ${(props) => (props.visible ? \"flex\" : \"none\")};\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  position: fixed;\r\n  bottom: 80px;\r\n  right: 20px;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  background: #007bff;\r\n  color: white;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChatBody = styled.div`\r\n  flex: 1;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  font-size: 14px;\r\n  background: #f9f9f9;\r\n`;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  display: flex;\r\n  border-top: 1px solid #ddd;\r\n  padding: 5px;\r\n  background: #fff;\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Chatbot = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedMessages = JSON.parse(localStorage.getItem(\"chatHistory\")) || [];\r\n    setMessages(storedMessages);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (event) => {\r\n    if (event.key === \"Enter\" || event.type === \"click\") {\r\n      const input = event.target.value || document.getElementById(\"chat-input\").value;\r\n      if (!input.trim()) return;\r\n\r\n      const userMessage = { text: input, sender: \"user\" };\r\n      const botResponse = { text: getBotResponse(input), sender: \"bot\" };\r\n\r\n      setMessages([...messages, userMessage, botResponse]);\r\n      document.getElementById(\"chat-input\").value = \"\";\r\n    }\r\n  };\r\n\r\n  const getBotResponse = (input) => {\r\n    const responses = {\r\n      hello: \"Hi there! How can I help you?\",\r\n      \"how are you\": \"I'm just a bot, but I'm doing great!\",\r\n      bye: \"Goodbye! Have a great day!\",\r\n    };\r\n    return responses[input.toLowerCase()] || \"I'm not sure, but I'm learning!\";\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatButton onClick={() => setVisible(!visible)}>💬</ChatButton>\r\n      <ChatWindow visible={visible}>\r\n        <ChatHeader>\r\n          <span>Chatbot</span>\r\n          <CloseButton onClick={() => setVisible(false)}>&times;</CloseButton>\r\n        </ChatHeader>\r\n        <ChatBody>\r\n          {messages.map((msg, index) => (\r\n            <div key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\" }}>\r\n              <p style={{ margin: \"5px 0\", padding: \"5px\", background: msg.sender === \"user\" ? \"#007bff\" : \"#ddd\", color: msg.sender === \"user\" ? \"white\" : \"black\", borderRadius: \"5px\", display: \"inline-block\" }}>\r\n                {msg.text}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </ChatBody>\r\n        <ChatInputContainer>\r\n          <ChatInput id=\"chat-input\" type=\"text\" placeholder=\"Type a message...\" onKeyPress={handleSendMessage} />\r\n          <SendButton onClick={handleSendMessage}>➤</SendButton>\r\n        </ChatInputContainer>\r\n      </ChatWindow>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}