{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mayan/OneDrive/Desktop/mayank-cse.github.io-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"C:/Users/mayan/OneDrive/Desktop/mayank-cse.github.io-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/mayan/OneDrive/Desktop/mayank-cse.github.io-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/mayan/OneDrive/Desktop/mayank-cse.github.io-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"C:/Users/mayan/OneDrive/Desktop/mayank-cse.github.io-main/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API_KEY=\"AIzaSyA19uCjIjOX3Wsjlan6ZT-R9cBi05esgjw\";// Replace with your actual API key\nvar GEMINI_API_URL=\"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=\".concat(API_KEY);var SYSTEM_PROMPT=\"\\nYou are an AI assistant that provides responses only about Mayank Gupta's career. You must strictly answer questions related to his Education, Work Experience, Technical Skills, Projects, and Career Aspirations.\\n\\nIf a user asks about personal details, non-career topics, or unrelated subjects, politely decline by saying: \\n\\\"I'm here to answer questions about Mayank Gupta's education, experience, and career aspirations. Let me know how I can help!\\\"\\n\\nHere\\u2019s Mayank Gupta\\u2019s professional background:\\n\\n**Education:**  \\n- B.Tech in Computer Science and Engineering (2020-2024) from Vellore Institute of Technology, Chennai.  \\n- Higher Secondary (92.60%) from Ahlcon Public School, New Delhi (2018-2020).  \\n\\n**Experience:**  \\n- **Software Development Engineer (SDE) at John Deere** (June 2024 \\u2013 Present)  \\n  - Developed \\\"DeereVision AI Workspace,\\\" integrating LLaMA 3.2 and Neo4j & Chroma DB.  \\n  - Built modular Python solutions with LangChain, Terraform, Docker, and GitHub Actions on AWS.  \\n\\n- **SDE Intern at Swiggy** (Sept 2023 \\u2013 June 2024)  \\n  - Developed 7 full-fledged payment dashboards using Elasticsearch & Retool.  \\n\\n- **SDE Intern at Dewiride Technologies** (July 2022 \\u2013 Dec 2022)  \\n  - Worked on 15+ client-specific projects using Python, C#, and Microsoft Bot Framework.  \\n\\n- **SDE Intern at LG Electronics** (May 2022 \\u2013 July 2022)  \\n  - Built a Lunch Booking Web App used by 1000+ employees with C# and ASP.NET.  \\n\\n**Projects:**  \\n- **DEV \\u2013 Virtual Banking Assistant** (Finalist, Bank of Baroda Hackathon)  \\n- **Face Track AI** (Finalist, Tamil Nadu Police Hackathon)  \\n- **Hunger Free Society** (2nd Prize, IEEE AISYWAL Competition)  \\n- **Go-To-Market Merchandiser Bot** (Automated Merchandiser Reporting)  \\n\\n**Skills:**  \\n- **Programming:** Python, C++, Java, C#  \\n- **Frameworks:** Ollama, LangChain, FastAPI, Flask, ASP.NET, Django  \\n- **Databases:** MySQL, Cosmos DB, Neo4j, ChromaDB, FAISS  \\n- **Cloud:** AWS, GCP, Azure  \\n\\nWhen answering questions, stay concise and professional. If the question is unclear, ask for clarification. If the topic is outside Mayank Gupta\\u2019s career scope, politely decline to answer.\\n\";var ChatContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px;\\n  z-index: 1000;\\n\"])));var ChatButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  padding: 12px;\\n  font-size: 20px;\\n  border-radius: 50%;\\n  cursor: pointer;\\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\\n\"])));var ChatWindow=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 300px;\\n  height: 400px;\\n  background: white;\\n  border-radius: 10px;\\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\\n  display: \",\";\\n  flex-direction: column;\\n  overflow: hidden;\\n  position: fixed;\\n  bottom: 80px;\\n  right: 20px;\\n\"])),function(props){return props.visible?\"flex\":\"none\";});var ChatHeader=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  padding: 10px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n\"])));var CloseButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: none;\\n  border: none;\\n  color: white;\\n  font-size: 18px;\\n  cursor: pointer;\\n\"])));var ChatBody=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 10px;\\n  overflow-y: auto;\\n  font-size: 14px;\\n  background: #f9f9f9;\\n\"])));var ChatInputContainer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  border-top: 1px solid #ddd;\\n  padding: 5px;\\n  background: #fff;\\n\"])));var ChatInput=styled.input(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 8px;\\n  border: none;\\n  outline: none;\\n\"])));var SendButton=styled.button(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  padding: 8px;\\n  cursor: pointer;\\n\"])));var Chatbot=function Chatbot(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];useEffect(function(){var storedMessages=JSON.parse(localStorage.getItem(\"chatHistory\"))||[];setMessages(storedMessages);},[]);useEffect(function(){localStorage.setItem(\"chatHistory\",JSON.stringify(messages));},[messages]);var handleSendMessage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var input,userMessage,botResponse;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(event.key===\"Enter\"||event.type===\"click\")){_context.next=11;break;}input=event.target.value||document.getElementById(\"chat-input\").value;if(input.trim()){_context.next=4;break;}return _context.abrupt(\"return\");case 4:userMessage={text:input,sender:\"user\"};setMessages([].concat(_toConsumableArray(messages),[userMessage]));_context.next=8;return getBotResponse(input);case 8:botResponse=_context.sent;setMessages(function(prev){return[].concat(_toConsumableArray(prev),[{text:botResponse,sender:\"bot\"}]);});document.getElementById(\"chat-input\").value=\"\";case 11:case\"end\":return _context.stop();}},_callee);}));return function handleSendMessage(_x){return _ref.apply(this,arguments);};}();var getBotResponse=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input){var _data$candidates,_data$candidates$,_data$candidates$$con,_data$candidates$$con2,_data$candidates$$con3,response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(GEMINI_API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({contents:[{parts:[{text:\"\".concat(SYSTEM_PROMPT,\"\\nUser: \").concat(input,\"\\nAI:\")}]}]})});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;return _context2.abrupt(\"return\",(data===null||data===void 0?void 0:(_data$candidates=data.candidates)===null||_data$candidates===void 0?void 0:(_data$candidates$=_data$candidates[0])===null||_data$candidates$===void 0?void 0:(_data$candidates$$con=_data$candidates$.content)===null||_data$candidates$$con===void 0?void 0:(_data$candidates$$con2=_data$candidates$$con.parts)===null||_data$candidates$$con2===void 0?void 0:(_data$candidates$$con3=_data$candidates$$con2[0])===null||_data$candidates$$con3===void 0?void 0:_data$candidates$$con3.text)||\"I'm not sure, but I'm learning!\");case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.error(\"Error fetching response:\",_context2.t0);return _context2.abrupt(\"return\",\"Oops! Something went wrong.\");case 14:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return function getBotResponse(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(ChatContainer,{children:[/*#__PURE__*/_jsx(ChatButton,{onClick:function onClick(){return setVisible(!visible);},children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsxs(ChatWindow,{visible:visible,children:[/*#__PURE__*/_jsxs(ChatHeader,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Chatbot\"}),/*#__PURE__*/_jsx(CloseButton,{onClick:function onClick(){return setVisible(false);},children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(ChatBody,{children:messages.map(function(msg,index){return/*#__PURE__*/_jsx(\"div\",{style:{textAlign:msg.sender===\"user\"?\"right\":\"left\"},children:/*#__PURE__*/_jsx(\"p\",{style:{margin:\"5px 0\",padding:\"5px\",background:msg.sender===\"user\"?\"#007bff\":\"#ddd\",color:msg.sender===\"user\"?\"white\":\"black\",borderRadius:\"5px\",display:\"inline-block\"},children:msg.text})},index);})}),/*#__PURE__*/_jsxs(ChatInputContainer,{children:[/*#__PURE__*/_jsx(ChatInput,{id:\"chat-input\",type:\"text\",placeholder:\"Type a message...\",onKeyPress:handleSendMessage}),/*#__PURE__*/_jsx(SendButton,{onClick:handleSendMessage,children:\"\\u27A4\"})]})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","styled","jsx","_jsx","jsxs","_jsxs","API_KEY","GEMINI_API_URL","concat","SYSTEM_PROMPT","ChatContainer","div","_templateObject","_taggedTemplateLiteral","ChatButton","button","_templateObject2","ChatWindow","_templateObject3","props","visible","ChatHeader","_templateObject4","CloseButton","_templateObject5","ChatBody","_templateObject6","ChatInputContainer","_templateObject7","ChatInput","input","_templateObject8","SendButton","_templateObject9","Chatbot","_useState","_useState2","_slicedToArray","setVisible","_useState3","_useState4","messages","setMessages","storedMessages","JSON","parse","localStorage","getItem","setItem","stringify","handleSendMessage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","userMessage","botResponse","wrap","_callee$","_context","prev","next","key","type","target","value","document","getElementById","trim","abrupt","text","sender","_toConsumableArray","getBotResponse","sent","stop","_x","apply","arguments","_ref2","_callee2","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","response","data","_callee2$","_context2","fetch","method","headers","body","contents","parts","json","candidates","content","t0","console","error","_x2","children","onClick","map","msg","index","style","textAlign","margin","padding","background","color","borderRadius","display","id","placeholder","onKeyPress"],"sources":["C:/Users/mayan/OneDrive/Desktop/mayank-cse.github.io-main/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst API_KEY = \"AIzaSyA19uCjIjOX3Wsjlan6ZT-R9cBi05esgjw\"; // Replace with your actual API key\r\nconst GEMINI_API_URL = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${API_KEY}`;\r\nconst SYSTEM_PROMPT = `\r\nYou are an AI assistant that provides responses only about Mayank Gupta's career. You must strictly answer questions related to his Education, Work Experience, Technical Skills, Projects, and Career Aspirations.\r\n\r\nIf a user asks about personal details, non-career topics, or unrelated subjects, politely decline by saying: \r\n\"I'm here to answer questions about Mayank Gupta's education, experience, and career aspirations. Let me know how I can help!\"\r\n\r\nHere’s Mayank Gupta’s professional background:\r\n\r\n**Education:**  \r\n- B.Tech in Computer Science and Engineering (2020-2024) from Vellore Institute of Technology, Chennai.  \r\n- Higher Secondary (92.60%) from Ahlcon Public School, New Delhi (2018-2020).  \r\n\r\n**Experience:**  \r\n- **Software Development Engineer (SDE) at John Deere** (June 2024 – Present)  \r\n  - Developed \"DeereVision AI Workspace,\" integrating LLaMA 3.2 and Neo4j & Chroma DB.  \r\n  - Built modular Python solutions with LangChain, Terraform, Docker, and GitHub Actions on AWS.  \r\n\r\n- **SDE Intern at Swiggy** (Sept 2023 – June 2024)  \r\n  - Developed 7 full-fledged payment dashboards using Elasticsearch & Retool.  \r\n\r\n- **SDE Intern at Dewiride Technologies** (July 2022 – Dec 2022)  \r\n  - Worked on 15+ client-specific projects using Python, C#, and Microsoft Bot Framework.  \r\n\r\n- **SDE Intern at LG Electronics** (May 2022 – July 2022)  \r\n  - Built a Lunch Booking Web App used by 1000+ employees with C# and ASP.NET.  \r\n\r\n**Projects:**  \r\n- **DEV – Virtual Banking Assistant** (Finalist, Bank of Baroda Hackathon)  \r\n- **Face Track AI** (Finalist, Tamil Nadu Police Hackathon)  \r\n- **Hunger Free Society** (2nd Prize, IEEE AISYWAL Competition)  \r\n- **Go-To-Market Merchandiser Bot** (Automated Merchandiser Reporting)  \r\n\r\n**Skills:**  \r\n- **Programming:** Python, C++, Java, C#  \r\n- **Frameworks:** Ollama, LangChain, FastAPI, Flask, ASP.NET, Django  \r\n- **Databases:** MySQL, Cosmos DB, Neo4j, ChromaDB, FAISS  \r\n- **Cloud:** AWS, GCP, Azure  \r\n\r\nWhen answering questions, stay concise and professional. If the question is unclear, ask for clarification. If the topic is outside Mayank Gupta’s career scope, politely decline to answer.\r\n`;\r\n\r\n\r\nconst ChatContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ChatButton = styled.button`\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px;\r\n  font-size: 20px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst ChatWindow = styled.div`\r\n  width: 300px;\r\n  height: 400px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n  display: ${(props) => (props.visible ? \"flex\" : \"none\")};\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  position: fixed;\r\n  bottom: 80px;\r\n  right: 20px;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  background: #007bff;\r\n  color: white;\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChatBody = styled.div`\r\n  flex: 1;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  font-size: 14px;\r\n  background: #f9f9f9;\r\n`;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  display: flex;\r\n  border-top: 1px solid #ddd;\r\n  padding: 5px;\r\n  background: #fff;\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  flex: 1;\r\n  padding: 8px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background: #007bff;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Chatbot = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedMessages = JSON.parse(localStorage.getItem(\"chatHistory\")) || [];\r\n    setMessages(storedMessages);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async (event) => {\r\n    if (event.key === \"Enter\" || event.type === \"click\") {\r\n      const input = event.target.value || document.getElementById(\"chat-input\").value;\r\n      if (!input.trim()) return;\r\n\r\n      const userMessage = { text: input, sender: \"user\" };\r\n      setMessages([...messages, userMessage]);\r\n\r\n      const botResponse = await getBotResponse(input);\r\n      setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\r\n\r\n      document.getElementById(\"chat-input\").value = \"\";\r\n    }\r\n  };\r\n\r\n  const getBotResponse = async (input) => {\r\n    try {\r\n        const response = await fetch(GEMINI_API_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                contents: [\r\n                    {\r\n                        parts: [\r\n                            { text: `${SYSTEM_PROMPT}\\nUser: ${input}\\nAI:` }\r\n                        ]\r\n                    }\r\n                ]\r\n            }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        return data?.candidates?.[0]?.content?.parts?.[0]?.text || \"I'm not sure, but I'm learning!\";\r\n    } catch (error) {\r\n        console.error(\"Error fetching response:\", error);\r\n        return \"Oops! Something went wrong.\";\r\n        }\r\n    };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatButton onClick={() => setVisible(!visible)}>💬</ChatButton>\r\n      <ChatWindow visible={visible}>\r\n        <ChatHeader>\r\n          <span>Chatbot</span>\r\n          <CloseButton onClick={() => setVisible(false)}>&times;</CloseButton>\r\n        </ChatHeader>\r\n        <ChatBody>\r\n          {messages.map((msg, index) => (\r\n            <div key={index} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\" }}>\r\n              <p\r\n                style={{\r\n                  margin: \"5px 0\",\r\n                  padding: \"5px\",\r\n                  background: msg.sender === \"user\" ? \"#007bff\" : \"#ddd\",\r\n                  color: msg.sender === \"user\" ? \"white\" : \"black\",\r\n                  borderRadius: \"5px\",\r\n                  display: \"inline-block\",\r\n                }}\r\n              >\r\n                {msg.text}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </ChatBody>\r\n        <ChatInputContainer>\r\n          <ChatInput id=\"chat-input\" type=\"text\" placeholder=\"Type a message...\" onKeyPress={handleSendMessage} />\r\n          <SendButton onClick={handleSendMessage}>➤</SendButton>\r\n        </ChatInputContainer>\r\n      </ChatWindow>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}